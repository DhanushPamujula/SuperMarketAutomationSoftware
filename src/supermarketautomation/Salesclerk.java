/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package supermarketautomation;

/**
 *
 * @author Dhanush Pamujula
 */
import java.sql.*;
import javax.swing.*;
import java.time.*;
import javax.swing.table.DefaultTableModel;
import net.proteanit.sql.DbUtils;
public class Salesclerk extends javax.swing.JFrame {

    /**
     * Creates new form Salesclerk
     */
    public Salesclerk() {
        initComponents();
        this.setVisible(true);
    }
    int traid;
    String trans="T0000000000";
    private void setTrans(int t)
    {
        String tp="";
        for(int i=10;i>0;i--)
        {
            int p=t%10;
            tp=p+tp;
            t=t/10;
        }
        tp='T'+tp;
        trans=tp;
    }
    private void setTransId()
    {
        //JOptionPane.showMessageDialog(this,"Inside");
        try
        {
            Con =  (Connection) DriverManager.getConnection("jdbc:mysql://localhost:3306/supermarket","dhanu","root123");
            St =Con.createStatement();
            String que="Select count(distinct TId) from supermarket.transaction";
            Rs=St.executeQuery(que);
            if(Rs.next()) traid=Rs.getInt(1);
            else traid=0;
            traid++;
            setTrans(traid);
            SerId.setText(trans);
            //JOptionPane.showMessageDialog(this,String.valueOf(trans));
        }
        catch(Exception e)
                
        {
            e.printStackTrace();
        }
    }
    public Salesclerk(String s) {
        initComponents();
        this.setVisible(true);
        createcon();
        SCId.setText(s);
        getCat();
        SelectProduct();
        setTransId();
        setBillHeader();
    }
    Connection Con,aon;
    private void setBillHeader()
    {
        Bill.removeAll();
        Bill.setText("******************* DMS MARKET ******************\n\tSpend Less,Buy More\n-----------------------------------------------------\n");
        Bill.setText(Bill.getText()+"                TRANSACTION ID : "+trans+"\n-----------------------------------------------------\n");
        Bill.setText(Bill.getText()+"S.No.  Name          Quantity    UnitPrice    TotalPrice\n");
    }
    private void createcon()
    {
        try{
     Con =  (Connection) DriverManager.getConnection("jdbc:mysql://localhost:3306/supermarket","dhanu","root123");
     aon =  (Connection) DriverManager.getConnection("jdbc:mysql://localhost:3306/supermarket","dhanu","root123");
        }
        catch(Exception e)
        {
            e.printStackTrace();
        }
    }
    Statement St;
    ResultSet Rs;
    private void getCat()
    {
        try{
        Con =  (Connection) DriverManager.getConnection("jdbc:mysql://localhost:3306/supermarket","dhanu","root123");
        St =Con.createStatement();
        String que="Select Name from supermarket.Category";
        Rs=St.executeQuery(que);
        Category.removeAllItems();
        Category.addItem("SELECT");
        while(Rs.next())
        {
            String cats=Rs.getString("Name");
            Category.addItem(cats);
        }
        }
        catch(Exception e)
        {
            e.printStackTrace();
        }
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel2 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        SCId = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        Quantity = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        PId = new javax.swing.JTextField();
        Category = new javax.swing.JComboBox<>();
        jLabel9 = new javax.swing.JLabel();
        Edit = new javax.swing.JButton();
        Add = new javax.swing.JButton();
        Cancel = new javax.swing.JButton();
        GenBill = new javax.swing.JButton();
        PrintBill = new javax.swing.JButton();
        Filter = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        ProductsTable = new javax.swing.JTable();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLayeredPane1 = new javax.swing.JLayeredPane();
        jScrollPane2 = new javax.swing.JScrollPane();
        Bill = new javax.swing.JTextArea();
        Logout = new javax.swing.JButton();
        jLabel12 = new javax.swing.JLabel();
        SerId = new javax.swing.JTextField();

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("DMS MARKET BILLING SYSTEM");
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        setResizable(false);

        jPanel1.setBackground(new java.awt.Color(0, 0, 180));

        jLabel7.setBackground(new java.awt.Color(255, 0, 0));
        jLabel7.setFont(new java.awt.Font("Gadugi", 1, 20)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(255, 255, 255));
        jLabel7.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel7.setText("BILLING SYSTEM");
        jLabel7.setToolTipText("");
        jLabel7.setBorder(javax.swing.BorderFactory.createCompoundBorder(null, javax.swing.BorderFactory.createCompoundBorder()));
        jLabel7.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jLabel7.setIconTextGap(5);

        jLabel5.setBackground(new java.awt.Color(255, 0, 0));
        jLabel5.setFont(new java.awt.Font("Gadugi", 1, 12)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel5.setText("SALES CLERK ID :");
        jLabel5.setToolTipText("");
        jLabel5.setBorder(javax.swing.BorderFactory.createCompoundBorder(null, javax.swing.BorderFactory.createCompoundBorder()));
        jLabel5.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jLabel5.setIconTextGap(5);
        jLabel5.setPreferredSize(new java.awt.Dimension(50, 26));

        SCId.setEditable(false);
        SCId.setBackground(new java.awt.Color(204, 204, 204));
        SCId.setFont(new java.awt.Font("Gadugi", 0, 14)); // NOI18N
        SCId.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        SCId.setPreferredSize(new java.awt.Dimension(80, 26));
        SCId.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SCIdActionPerformed(evt);
            }
        });

        jLabel6.setBackground(new java.awt.Color(255, 0, 0));
        jLabel6.setFont(new java.awt.Font("Gadugi", 1, 12)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel6.setText("PRODUCT ID :");
        jLabel6.setToolTipText("");
        jLabel6.setBorder(javax.swing.BorderFactory.createCompoundBorder(null, javax.swing.BorderFactory.createCompoundBorder()));
        jLabel6.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jLabel6.setIconTextGap(5);
        jLabel6.setPreferredSize(new java.awt.Dimension(50, 26));

        Quantity.setFont(new java.awt.Font("Gadugi", 0, 14)); // NOI18N
        Quantity.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        Quantity.setPreferredSize(new java.awt.Dimension(80, 26));
        Quantity.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                QuantityActionPerformed(evt);
            }
        });

        jLabel8.setBackground(new java.awt.Color(255, 0, 0));
        jLabel8.setFont(new java.awt.Font("Gadugi", 1, 12)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(255, 255, 255));
        jLabel8.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel8.setText("QUANTITTY :");
        jLabel8.setToolTipText("");
        jLabel8.setBorder(javax.swing.BorderFactory.createCompoundBorder(null, javax.swing.BorderFactory.createCompoundBorder()));
        jLabel8.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jLabel8.setIconTextGap(5);
        jLabel8.setPreferredSize(new java.awt.Dimension(50, 26));

        PId.setFont(new java.awt.Font("Gadugi", 0, 14)); // NOI18N
        PId.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        PId.setPreferredSize(new java.awt.Dimension(80, 26));
        PId.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PIdActionPerformed(evt);
            }
        });

        Category.setFont(new java.awt.Font("Gadugi", 0, 14)); // NOI18N
        Category.setAutoscrolls(true);
        Category.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CategoryActionPerformed(evt);
            }
        });

        jLabel9.setBackground(new java.awt.Color(255, 0, 0));
        jLabel9.setFont(new java.awt.Font("Gadugi", 1, 12)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(255, 255, 255));
        jLabel9.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel9.setText("CATEGORY : ");
        jLabel9.setToolTipText("");
        jLabel9.setBorder(javax.swing.BorderFactory.createCompoundBorder(null, javax.swing.BorderFactory.createCompoundBorder()));
        jLabel9.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jLabel9.setIconTextGap(5);
        jLabel9.setPreferredSize(new java.awt.Dimension(50, 26));

        Edit.setBackground(new java.awt.Color(160, 160, 160));
        Edit.setFont(new java.awt.Font("Gadugi", 1, 12)); // NOI18N
        Edit.setText("EDIT ITEM IN BILL");
        Edit.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                EditMouseClicked(evt);
            }
        });
        Edit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EditActionPerformed(evt);
            }
        });

        Add.setBackground(new java.awt.Color(160, 160, 160));
        Add.setFont(new java.awt.Font("Gadugi", 1, 12)); // NOI18N
        Add.setText("ADD TO BILL");
        Add.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                AddMouseClicked(evt);
            }
        });
        Add.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AddActionPerformed(evt);
            }
        });

        Cancel.setBackground(new java.awt.Color(160, 160, 160));
        Cancel.setFont(new java.awt.Font("Gadugi", 1, 12)); // NOI18N
        Cancel.setText("CANCEL TRANSACTION");
        Cancel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                CancelMouseClicked(evt);
            }
        });
        Cancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CancelActionPerformed(evt);
            }
        });

        GenBill.setBackground(new java.awt.Color(160, 160, 160));
        GenBill.setFont(new java.awt.Font("Gadugi", 1, 12)); // NOI18N
        GenBill.setText("GENERATE BILL");
        GenBill.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                GenBillMouseClicked(evt);
            }
        });
        GenBill.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                GenBillActionPerformed(evt);
            }
        });

        PrintBill.setBackground(new java.awt.Color(160, 160, 160));
        PrintBill.setFont(new java.awt.Font("Gadugi", 1, 12)); // NOI18N
        PrintBill.setText("PRINT BILL");
        PrintBill.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                PrintBillMouseClicked(evt);
            }
        });
        PrintBill.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PrintBillActionPerformed(evt);
            }
        });

        Filter.setBackground(new java.awt.Color(160, 160, 160));
        Filter.setFont(new java.awt.Font("Gadugi", 1, 12)); // NOI18N
        Filter.setText("FILTER");
        Filter.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                FilterMouseClicked(evt);
            }
        });
        Filter.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                FilterActionPerformed(evt);
            }
        });

        ProductsTable.setFont(new java.awt.Font("Gadugi", 0, 12)); // NOI18N
        ProductsTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "PRODUCT ID", "NAME", "CATEGORY", "STOCK", "PRICE"
            }
        ));
        ProductsTable.setGridColor(new java.awt.Color(0, 0, 255));
        ProductsTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                ProductsTableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(ProductsTable);

        jLabel10.setBackground(new java.awt.Color(255, 0, 0));
        jLabel10.setFont(new java.awt.Font("Gadugi", 1, 16)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(255, 255, 255));
        jLabel10.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel10.setText("BILL");
        jLabel10.setToolTipText("");
        jLabel10.setBorder(javax.swing.BorderFactory.createCompoundBorder(null, javax.swing.BorderFactory.createCompoundBorder()));
        jLabel10.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jLabel10.setIconTextGap(5);

        jLabel11.setBackground(new java.awt.Color(255, 0, 0));
        jLabel11.setFont(new java.awt.Font("Gadugi", 1, 16)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(255, 255, 255));
        jLabel11.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel11.setText("PRODUCT LIST");
        jLabel11.setToolTipText("");
        jLabel11.setBorder(javax.swing.BorderFactory.createCompoundBorder(null, javax.swing.BorderFactory.createCompoundBorder()));
        jLabel11.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jLabel11.setIconTextGap(5);

        Bill.setEditable(false);
        Bill.setColumns(20);
        Bill.setFont(new java.awt.Font("Gadugi", 0, 14)); // NOI18N
        Bill.setRows(5);
        Bill.setText("------------------DMS MARKET-----------------------------------\n\nSERIAL NO.     NAME     QUANTITY     UNIT COST     TOTAL COST");
        jScrollPane2.setViewportView(Bill);

        jLayeredPane1.setLayer(jScrollPane2, javax.swing.JLayeredPane.DEFAULT_LAYER);

        javax.swing.GroupLayout jLayeredPane1Layout = new javax.swing.GroupLayout(jLayeredPane1);
        jLayeredPane1.setLayout(jLayeredPane1Layout);
        jLayeredPane1Layout.setHorizontalGroup(
            jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jLayeredPane1Layout.createSequentialGroup()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 337, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 10, Short.MAX_VALUE))
        );
        jLayeredPane1Layout.setVerticalGroup(
            jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 460, Short.MAX_VALUE)
        );

        Logout.setBackground(new java.awt.Color(160, 160, 160));
        Logout.setFont(new java.awt.Font("Gadugi", 1, 12)); // NOI18N
        Logout.setText("LOGOUT");
        Logout.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                LogoutMouseClicked(evt);
            }
        });
        Logout.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                LogoutActionPerformed(evt);
            }
        });

        jLabel12.setBackground(new java.awt.Color(255, 0, 0));
        jLabel12.setFont(new java.awt.Font("Gadugi", 1, 12)); // NOI18N
        jLabel12.setForeground(new java.awt.Color(255, 255, 255));
        jLabel12.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel12.setText("SERIAL ID :");
        jLabel12.setToolTipText("");
        jLabel12.setBorder(javax.swing.BorderFactory.createCompoundBorder(null, javax.swing.BorderFactory.createCompoundBorder()));
        jLabel12.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jLabel12.setIconTextGap(5);
        jLabel12.setPreferredSize(new java.awt.Dimension(50, 26));

        SerId.setEditable(false);
        SerId.setBackground(new java.awt.Color(204, 204, 204));
        SerId.setFont(new java.awt.Font("Gadugi", 0, 14)); // NOI18N
        SerId.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        SerId.setPreferredSize(new java.awt.Dimension(80, 26));
        SerId.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SerIdActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jLabel6, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 104, Short.MAX_VALUE)
                            .addComponent(jLabel5, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(SCId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(PId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(Category, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGap(90, 90, 90)
                        .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 223, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(Logout)
                        .addGap(56, 56, 56))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(SerId, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 223, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(105, 105, 105))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 89, Short.MAX_VALUE)
                                .addComponent(Quantity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 95, Short.MAX_VALUE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(Cancel, javax.swing.GroupLayout.PREFERRED_SIZE, 171, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(39, 39, 39)))
                        .addComponent(jLayeredPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(38, 38, 38))))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(Add)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 26, Short.MAX_VALUE)
                        .addComponent(Edit)
                        .addGap(109, 109, 109))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(GenBill, javax.swing.GroupLayout.PREFERRED_SIZE, 156, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(42, 42, 42)
                        .addComponent(PrintBill, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addGap(508, 508, 508))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(123, 123, 123)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(Filter)
                            .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 223, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(55, 55, 55)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(SCId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(SerId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(Logout))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(Quantity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(PId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(15, 15, 15)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(Edit)
                            .addComponent(Add)
                            .addComponent(Cancel))
                        .addGap(15, 15, 15)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(GenBill)
                            .addComponent(PrintBill))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(Category, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(Filter))
                        .addGap(10, 10, 10)
                        .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 249, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLayeredPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(50, Short.MAX_VALUE))
        );

        Edit.getAccessibleContext().setAccessibleName("ADD");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void SCIdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SCIdActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_SCIdActionPerformed

    private void QuantityActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_QuantityActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_QuantityActionPerformed

    private void PIdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PIdActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_PIdActionPerformed

    private void CategoryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CategoryActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_CategoryActionPerformed

    private void EditActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EditActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_EditActionPerformed

    private void AddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AddActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_AddActionPerformed

    private void CancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CancelActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_CancelActionPerformed

    private void GenBillActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_GenBillActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_GenBillActionPerformed

    private void PrintBillActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PrintBillActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_PrintBillActionPerformed

    private void FilterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_FilterActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_FilterActionPerformed

    private void LogoutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_LogoutActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_LogoutActionPerformed

    private void SerIdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SerIdActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_SerIdActionPerformed

    private void LogoutMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_LogoutMouseClicked
        // TODO add your handling code here:
        this.dispose();
        new Login();
    }//GEN-LAST:event_LogoutMouseClicked

    private void FilterMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_FilterMouseClicked
        // TODO add your handling code here:
         try
    {
        if(Category.getSelectedItem().toString()=="SELECT")
        {
            SelectProduct();
        }
        else
        {
          Con =  (Connection) DriverManager.getConnection("jdbc:mysql://localhost:3306/supermarket","dhanu","root123");
            PreparedStatement add = Con.prepareStatement("Select Id,name,category,stock,Price from supermarket.products where category=? order by name");
            add.setString(1,String.valueOf(Category.getSelectedItem()));
            Rs = add.executeQuery();
            ProductsTable.setModel(DbUtils.resultSetToTableModel(Rs));
        Con.close();
        }
        
        
    }
    catch(Exception e)
    {
        e.printStackTrace();
    }
    }//GEN-LAST:event_FilterMouseClicked

    private void ProductsTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ProductsTableMouseClicked
        // TODO add your handling code here:
        try{
        aon =  (Connection) DriverManager.getConnection("jdbc:mysql://localhost:3306/supermarket","dhanu","root123");
        Statement s=aon.createStatement();
        DefaultTableModel model = (DefaultTableModel)ProductsTable.getModel();
        int Index=ProductsTable.getSelectedRow();
        PId.setText(model.getValueAt(Index,0).toString());
        Category.setSelectedItem(model.getValueAt(Index,2).toString());
        }
        catch(Exception e)
        {
            e.printStackTrace();
        }
        
    }//GEN-LAST:event_ProductsTableMouseClicked
private boolean CheckUniqueProId(String s)
    {
         try{
          aon =  (Connection) DriverManager.getConnection("jdbc:mysql://localhost:3306/supermarket","dhanu","root123");
            PreparedStatement add = Con.prepareStatement("Select count(*) from products where Id=?");
            add.setString(1,String.valueOf(s));
            Rs=add.executeQuery();
        aon.close();
            Rs.next();
            if(Rs.getInt(1)==0) return true;
            return false;
        }
        catch(Exception e)
        {
            e.printStackTrace();
        }
        JOptionPane.showMessageDialog(this,"Excpet"); 
        return false;
    }
    private boolean CheckTransPro(String s,float bas,float pri,int qua)
    {
        try{
        aon =  (Connection) DriverManager.getConnection("jdbc:mysql://localhost:3306/supermarket","dhanu","root123");
        String que="Select count(*) from transaction where PId='"+s+"' and TId='"+trans+"'";
        St=aon.createStatement();
        Rs=St.executeQuery(que);
        Rs.next();
        if(Rs.getInt(1)==0)
        {
            //JOptionPane.showMessageDialog(this,"Product Found");
            return false;
        }
        else
        {
            PreparedStatement add=aon.prepareStatement("update transaction set date=?,quantity=quantity+?,profit=profit+? where Pid=? and TId=?");
            add.setDate(1, Date.valueOf(LocalDate.now()));
            add.setInt(2,Integer.valueOf(qua));
            add.setFloat(3, Float.valueOf(qua*(pri-bas)));
            add.setString(4,s);
            add.setString(5, trans);
            int row=add.executeUpdate();
            return true;
        }
        
        }
        catch(Exception e)
        {
            e.printStackTrace();
        }
        
        return true;
    }
    private void updateStock(int ps,String s)
    {
        try{
        Con =  (Connection) DriverManager.getConnection("jdbc:mysql://localhost:3306/supermarket","dhanu","root123");
        PreparedStatement up=Con.prepareStatement("update products set stock=stock-? where Id=?");
        up.setInt(1,Integer.valueOf(ps));
        up.setString(2,String.valueOf(s));            
        int pis=up.executeUpdate();
        }
        catch(Exception e)
        {
            e.printStackTrace();
        }
    }
    private void adds()
    {
        if(PId.getText().isEmpty() || Quantity.getText().isEmpty())
        {
            JOptionPane.showMessageDialog(this,"Information is Missing adds");
            return;
        }
        try
        {
            Con =  (Connection) DriverManager.getConnection("jdbc:mysql://localhost:3306/supermarket","dhanu","root123");
            PreparedStatement add = Con.prepareStatement("insert into transaction values(?,?,?,?,?,?,?)");
            if(CheckUniqueProId(PId.getText().toString()))
            {
                JOptionPane.showMessageDialog(this,"Product Id doesn't Exist");
                Con.close();
                return;
            }
            add.setString(1, trans);
            add.setString(2,PId.getText().toString());
            aon =  (Connection) DriverManager.getConnection("jdbc:mysql://localhost:3306/supermarket","dhanu","root123");
            String que="Select Name,BasePrice,Price,Stock from products where id='"+PId.getText().toString()+"'";
            St=aon.createStatement();
            Rs=St.executeQuery(que);
            //JOptionPane.showMessageDialog(this,"Check");
            String nam;
            float pri,base;
            int stock;
            if(Rs.next())
            {
                nam=Rs.getString(1);
                base=Rs.getFloat(2);
                pri=Rs.getFloat(3);
                stock=Rs.getInt(4);
                //JOptionPane.showMessageDialog(this,nam+" , "+pri+" , "+stock);

            }
            else
            {
                JOptionPane.showMessageDialog(this,"Product Id doesn't Exist");
                aon.close();
                return;
            }
            if(Integer.valueOf(Quantity.getText())> stock || stock<=0 || Integer.valueOf(Quantity.getText())<=0)
            {
                JOptionPane.showMessageDialog(this,"Stock is not enough");
                return;

            }
            updateStock(Integer.valueOf(Quantity.getText()),PId.getText().toString());
            aon.close();
            if(!CheckTransPro(PId.getText().toString(),base,pri,Integer.valueOf(Quantity.getText())))
            {
                add.setString(3,nam);
            add.setFloat(4, pri);
            LocalDate da=LocalDate.now();
            add.setDate(5, Date.valueOf(da));
            add.setInt(6,Integer.valueOf(Quantity.getText()));
            int qua=Integer.valueOf(Quantity.getText());
            add.setFloat(7,Float.valueOf(qua*(pri-base)));
            int row=add.executeUpdate();
           Con.close();
            }
            SelectProduct();
            bills();
            
        }
        catch(Exception e)
        {
            e.printStackTrace();
        }
    }
    private void AddMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_AddMouseClicked
        // TODO add your handling code here:
        adds();
        JOptionPane.showMessageDialog(this, "Added Successfully");
    }//GEN-LAST:event_AddMouseClicked

    private void EditMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_EditMouseClicked
        // TODO add your handling code here:
        if(PId.getText().isEmpty() || Quantity.getText().isEmpty())
        {
            JOptionPane.showMessageDialog(this,"Information is Missing For Editing");
            return;
        }
        try
        {
            Con =  (Connection) DriverManager.getConnection("jdbc:mysql://localhost:3306/supermarket","dhanu","root123");
            if(CheckUniqueProId(PId.getText().toString()))
            {
                JOptionPane.showMessageDialog(this,"Product Id doesn't Exist");
                Con.close();
                return;
            }
            aon =  (Connection) DriverManager.getConnection("jdbc:mysql://localhost:3306/supermarket","dhanu","root123");
            String que="Select quantity from transaction where Pid='"+PId.getText().toString()+"' and Tid='"+trans+"'";
            St=aon.createStatement();
            Rs=St.executeQuery(que);
            //JOptionPane.showMessageDialog(this,"Check");
            //Rs.next();
            if(!Rs.next())
            {
                adds();
                JOptionPane.showMessageDialog(this, "Edited Successfully");
                return;
            }
            int stoc=Rs.getInt(1);
            aon =  (Connection) DriverManager.getConnection("jdbc:mysql://localhost:3306/supermarket","dhanu","root123");
            String ques="Select Name,BasePrice,Price,Stock from products where id='"+PId.getText().toString()+"'";
            St=aon.createStatement();
            Rs=St.executeQuery(ques);
            //JOptionPane.showMessageDialog(this,"Check");
            String nam;
            float pri,base;
            int stock,qua=Integer.valueOf(Quantity.getText());
            Rs.next();
            nam=Rs.getString(1);
            base=Rs.getFloat(2);
            pri=Rs.getFloat(3);
            stock=Rs.getInt(4);
            if(stock<(qua-stoc) || stock<=0)
            {
                JOptionPane.showMessageDialog(this,"Stock not enough");
                return;
            }
            PreparedStatement add=Con.prepareStatement("update transaction set quantity=0,profit=0 where Pid=? and Tid=?");
            add.setString(1, PId.getText());
            add.setString(2,trans);
            int row=add.executeUpdate();
            updateStock(Integer.valueOf(-1*stoc),PId.getText().toString());
            adds();
            aon.close();
           JOptionPane.showMessageDialog(this, "Edited Successfully");
            //SelectProduct();
            
        }
        catch(Exception e)
        {
            e.printStackTrace();
        }
    }//GEN-LAST:event_EditMouseClicked

    private void CancelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_CancelMouseClicked
        // TODO add your handling code here:
        try
        {
            Con =  (Connection) DriverManager.getConnection("jdbc:mysql://localhost:3306/supermarket","dhanu","root123");
            aon =  (Connection) DriverManager.getConnection("jdbc:mysql://localhost:3306/supermarket","dhanu","root123");
            String que="Select Pid,quantity from transaction where Tid='"+trans+"'";
            St=aon.createStatement();
            Rs=St.executeQuery(que);
            //JOptionPane.showMessageDialog(this,"Check");
            //Rs.next();
            while(Rs.next())
            {
                String id=Rs.getString(1);
                int qua=Rs.getInt(2);
                updateStock(-1*qua,id);
            }
            PreparedStatement ques=Con.prepareStatement("delete from transaction where Tid=?");
            ques.setString(1,trans);
            int row=ques.executeUpdate();
            //JOptionPane.showMessageDialog(this,"Check");
            
            aon.close();
           JOptionPane.showMessageDialog(this, "Transaction is Canceled");
            SelectProduct();
            
            
        }
        catch(Exception e)
        {
            e.printStackTrace();
        }
    }//GEN-LAST:event_CancelMouseClicked
    private void bills()
    {
        setBillHeader();
        try
        {
            Con =  (Connection) DriverManager.getConnection("jdbc:mysql://localhost:3306/supermarket","dhanu","root123");
            St= Con.createStatement();
            String que="Select * from transaction where TId='"+trans+"' order by Name";
            Rs=St.executeQuery(que);
            if(!Rs.next())
            {
                JOptionPane.showMessageDialog(this, "Cart is Empty");
                return;
            }
            int id=1;
            float ans=0;
            while(true)
            {
                String nam=Rs.getString(3);
                float pri=Rs.getFloat(4);
                int quan=Rs.getInt(6);
                float tot=(float)quan*pri;
                ans+=tot;
                int ipid=String.valueOf(id).length();
                Bill.setText(Bill.getText()+id);
                spacetext(sinum-ipid);
                ipid=String.valueOf(nam).length();
                Bill.setText(Bill.getText()+capt(nam.toLowerCase()));
                spacetext(sinam-ipid);
                ipid=String.valueOf(quan).length();
                Bill.setText(Bill.getText()+quan);
                spacetext(siquan-ipid);
                ipid=String.valueOf(pri).length();
                Bill.setText(Bill.getText()+pri);
                spacetext(siprice-ipid);
                //ipid=String.valueOf(tot).length();
                Bill.setText(Bill.getText()+tot+"\n");
                //spacetext(sitot-ipid);
                //Bill.setText(Bill.getText()+"\n");
                //Bill.setText(Bill.getText()+id+"       "+nam+"       "+quan+"          "+pri+"         "+tot+"\n");
                id++;
                if(!Rs.next()) break;
            }
            Bill.setText(Bill.getText()+"-----------------------------------------------------\n"+"\tTOTAL AMOUNT = "+ans+"\n");
            
        }
        catch(Exception e)
        {
            e.printStackTrace();
        }
    }
    
    int sinum=9;
    int sinam=17;
    int siquan=15;
    int siprice=14;
    int sitot=12;
    private void spacetext(int i)
    {
        String ans="";
        for(int j=0;j<i;j++) ans+=" ";
        Bill.setText(Bill.getText()+ans);
    }
    private String capt(String s)
    {
        String f= s.substring(0, 1);
        String r = s.substring(1, s.length());
        f=f.toUpperCase();
        s=f+r;
        return s;
    }
    private void GenBillMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_GenBillMouseClicked
        // TODO add your handling code here:
        bills();
//        JOptionPane.showMessageDialog(this, "Bill Generated");
    }//GEN-LAST:event_GenBillMouseClicked

    private void PrintBillMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_PrintBillMouseClicked
        // TODO add your handling code here:
        try
        {
            Bill.print();
            setTransId();
            setBillHeader();
            
        }
        catch(Exception e)
        {
            e.printStackTrace();
        }
        
    }//GEN-LAST:event_PrintBillMouseClicked
     private void SelectProduct()
    {
        try
    {
        Con =  (Connection) DriverManager.getConnection("jdbc:mysql://localhost:3306/supermarket","dhanu","root123");
        St= Con.createStatement();
        Rs = St.executeQuery("Select Id,Name,Category,Stock,Price from supermarket.Products order by Id");
        ProductsTable.setModel(DbUtils.resultSetToTableModel(Rs));
        Con.close();
        
    }
    catch(Exception e)
    {
        e.printStackTrace();
    }
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Salesclerk.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Salesclerk.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Salesclerk.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Salesclerk.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Salesclerk("S0001").setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Add;
    private javax.swing.JTextArea Bill;
    private javax.swing.JButton Cancel;
    private javax.swing.JComboBox<String> Category;
    private javax.swing.JButton Edit;
    private javax.swing.JButton Filter;
    private javax.swing.JButton GenBill;
    private javax.swing.JButton Logout;
    private javax.swing.JTextField PId;
    private javax.swing.JButton PrintBill;
    private javax.swing.JTable ProductsTable;
    private javax.swing.JTextField Quantity;
    private javax.swing.JTextField SCId;
    private javax.swing.JTextField SerId;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JLayeredPane jLayeredPane1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    // End of variables declaration//GEN-END:variables
}
